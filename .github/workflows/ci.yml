on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main, staging, trying]
    tags:
      - "v*.*.*"

name: CI

env:
  CARGO_NET_RETRY: 3
  CARGO_HTTP_CHECK_REVOKE: false

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run ShellCheck
        uses: azohra/shell-linter@v0.3.0

  build:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-rust

      - name: Get Changed Files
        id: files
        uses: Ana06/get-changed-files@v2.1.0
        with:
          # use JSON so we don't have to worry about filenames with spaces
          format: 'json'
          filter: 'docker/Dockerfile.*'

      - name: Validate Changed Images
        id: images
        run: |
          set -x
          set -e
          # read modified files
          readarray -t added_modified < <(jq -r '.[]' <<<'${{ steps.files.outputs.added_modified }}')
          names=()
          for path in "${added_modified[@]}"; do
            filename=$(basename "${path}")
            if [[ "${filename}" == Dockerfile.*linux* ]]; then
              names+=("${filename/Dockerfile./}")
            fi
          done
          count=${#names[@]}

          # only run if we have any modified targets
          if [[ "${count}" -ne "0" ]]; then
            echo "Building and testing images for ${names}"

            # get and build cross to build our docker images
            home="${PWD}"
            td="$(mktemp -d)"
            cd "${td}"
            git clone https://github.com/cross-rs/cross/ "${td}"
            cargo build -p xtask

            # copy over our project and build our docker images
            cp -a "${home}"/* docker/cross-toolchains/
            python3 -m pip install toml --user
            echo "${names}"
            docker/cross-toolchains/run_ci_tests.py "${names}"
          fi
