FROM ubuntu:20.04
ARG DEBIAN_FRONTEND=noninteractive

COPY common.sh lib.sh /
RUN /common.sh

COPY cmake.sh /
RUN /cmake.sh

COPY xargo.sh /
RUN /xargo.sh

# run these in separate steps, so we can cache MSVC between all images.
COPY cross-toolchains/docker/msvc-wine.sh /
RUN /msvc-wine.sh

COPY wine.sh /
RUN /wine.sh

# need windows-style perl for paths
COPY cross-toolchains/docker/perl.sh /
RUN /perl.sh

ARG ARCH=arm64
COPY cross-toolchains/docker/msvc-wine-symlink.sh /
RUN /msvc-wine-symlink.sh $ARCH

COPY cross-toolchains/docker/msvc-windows-entry.sh /
ENTRYPOINT ["/msvc-windows-entry.sh"]

ENV CROSS_SYSROOT=/opt/msvc/vc/tools/msvc/latest
ENV CARGO_TARGET_AARCH64_PC_WINDOWS_MSVC_LINKER=link.exe \
    CC_aarch64_pc_windows_msvc=cl.exe \
    CXX_aarch64_pc_windows_msvc=cl.exe \
    PATH=/opt/msvc/bin/$ARCH:$PATH \
    WINEPATH="$WINEPATH;C:/windows/syswow64;C:/windows/system32;/opt/msvc/bin/$ARCH" \
    VSINSTALLDIR="/opt/msvc" \
    VCINSTALLDIR="/opt/msvc/vc" \
    VSCMD_ARG_TGT_ARCH=$ARCH \
    BINDGEN_EXTRA_CLANG_ARGS="-I$CROSS_SYSROOT/include/"
